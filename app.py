import os
import time
import streamlit as st
from audio_utils import prepare_audio
from openai_utils import transcribe_audio, generate_document
from config import get_config

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
cfg = get_config()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Audio‚Üí–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–∞–∫–∞", 
    page_icon="üìã",
    layout="wide"
)

# –°—Ç–∏–ª–∏
st.markdown("""
<style>
    .stProgress > div > div > div > div {
        background-color: #1E90FF;
    }
    .category-box {
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        margin-bottom: 1.5rem;
    }
    .new-category { border-left: 5px solid #FF4B4B; }
    .existing-category { border-left: 5px solid #0F9D58; }
    .keep-category { border-left: 5px solid #4285F4; }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìã –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—Ä–∞–∫–∞ –∏–∑ –∞—É–¥–∏–æ-–≤—Å—Ç—Ä–µ—á")
st.caption("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∑–∞–ø–∏—Å—å ‚Üí –ü–æ–ª—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")

# –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
with st.container():
    col1, col2 = st.columns([1, 3])
    
    with col1:
        st.subheader("1. –ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ")
        uploaded = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏", 
            type=["mp3", "wav"],
            accept_multiple_files=False,
            help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è MP3 –∏ WAV —Ñ–∞–π–ª—ã"
        )
        
        if uploaded:
            st.success(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {uploaded.name}")
            if st.button("üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É", type="primary", use_container_width=True):
                st.session_state.process = True
        else:
            st.info("‚ÑπÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç–µ mp3 –∏–ª–∏ wav —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏")
            st.session_state.clear()
    
    if uploaded and st.session_state.get("process"):
        progress_bar = st.progress(0, text="–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞—É–¥–∏–æ...")
        
        try:
            # –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞—É–¥–∏–æ
            time.sleep(0.5)
            progress_bar.progress(15, text="–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∞—É–¥–∏–æ...")
            wav_file = prepare_audio(uploaded)
            
            # –®–∞–≥ 2: –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è
            time.sleep(0.5)
            progress_bar.progress(35, text="–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è (—ç—Ç–æ –∑–∞–π–º–µ—Ç 1-5 –º–∏–Ω—É—Ç)...")
            transcript = transcribe_audio(wav_file)
            st.session_state.transcript = transcript
            
            # –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
            time.sleep(0.5)
            progress_bar.progress(65, text="–ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—Ä–∞–∫–∞...")
            document = generate_document(transcript)
            st.session_state.document = document
            
            # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            time.sleep(0.5)
            progress_bar.progress(100, text="–ì–æ—Ç–æ–≤–æ!")
            time.sleep(0.5)
            progress_bar.empty()
            
            # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            try:
                os.remove(wav_file)
            except:
                pass
                
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {str(e)}")
            st.stop()
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if st.session_state.get("document"):
        with col2:
            st.subheader("2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
            
            # –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
            with st.expander("üìù –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç", expanded=False):
                st.text_area("–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è", 
                            st.session_state.transcript, 
                            height=200,
                            label_visibility="collapsed")
            
            # –î–æ–∫—É–º–µ–Ω—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            st.subheader("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–∞–∫–∞", divider="blue")
            document = st.session_state.document
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            sections = {
                "–ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏": "new-category",
                "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–∞–∫–∞": "existing-category",
                "–û—Å—Ç–∞–≤–ª—è–µ–º": "keep-category"
            }
            
            for section, css_class in sections.items():
                start_idx = document.find(f"### {section}")
                if start_idx >= 0:
                    end_idx = document.find("###", start_idx + 1)
                    content = document[start_idx:end_idx].strip() if end_idx != -1 else document[start_idx:]
                    
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫
                    if ":" in content:
                        content = content.split(":", 1)[1].strip()
                    
                    with st.container():
                        st.markdown(f'<div class="category-box {css_class}">'
                                   f'<h3>{section}</h3>'
                                   f'<div style="margin-top:0.5rem">{content}</div>'
                                   f'</div>', 
                                   unsafe_allow_html=True)
            
            # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            st.download_button(
                label="üíæ –°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
                data=st.session_state.document,
                file_name="–∫–∞—Ç–µ–≥–æ—Ä–∏–∏_–±—Ä–∞–∫–∞.txt",
                mime="text/plain",
                use_container_width=True
            )
            