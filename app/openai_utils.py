import json
import streamlit as st
from openai import OpenAI
from config import get_config

cfg = get_config()
client = OpenAI(api_key=cfg.OPENAI_API_KEY)

def transcribe_audio(wav_path: str) -> str:
    st.info("üîç –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ–º –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ Whisper API‚Ä¶")
    try:
        with open(wav_path, "rb") as audio_file:
            transcript = client.audio.transcriptions.create(
                model=cfg.TRANSCRIBE_MODEL, 
                file=audio_file,
                temperature=cfg.TEMP_TRANSCRIBE,
                response_format="text"
            )
        st.success("‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≥–æ—Ç–æ–≤–∞.")
        return transcript
    except Exception as e:
        st.error(f"üö® –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏: {str(e)}")
        st.stop()

def analyze_categories(transcript: str) -> dict:
    st.info("üìù –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–∞–∫–∞‚Ä¶")
    
    system_prompt = """
    –¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –≤ –∫—Ä–µ–¥–∏—Ç–Ω–æ–º —Ü–µ–Ω—Ç—Ä–µ. 
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—Ä–∞–∫–∞. 
    –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞:

    ### –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∞–≤—Ç–æ–æ—Ç–∫–∞–∑):
    1. –ò–ø–æ—Ç–µ–∫–∞ ‚Üí –û–¢–ö–ê–ó
    2. –ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç ‚Üí –û–¢–ö–ê–ó
    3. –í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥ ‚Üí –û–¢–ö–ê–ó
    4. –ù–µ –≤ –≥–æ—Ä–æ–¥–µ ‚Üí –û–¢–ö–ê–ó
    5. –ü—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ‚Üí –û–¢–ö–ê–ó
    6. –•–æ—Ç—è—Ç –≤—Å—ë –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Üí –û–¢–ö–ê–ó

    ### –£—Å–ª–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
    7. –ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ ‚Üí –û–¢–ö–ê–ó (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ: –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —á–∞—Å—ã ‚Üí –ü–ï–†–ï–î–ê–í–ê–¢–¨)
    8. –ù–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å—É–º–º–µ –¥–æ–ª–≥–∞:
       - –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å—á–∏—Ç–∞–µ—Ç, —á—Ç–æ —Å—É–º–º–∞ >300 —Ç—ã—Å. —Ä—É–±. ‚Üí –ü–ï–†–ï–î–ê–í–ê–¢–¨
       - –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ —Å—É–º–º–µ ‚Üí –û–¢–ö–ê–ó

    ### –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è:
    - –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è ‚Üí –æ–±—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ "–ù–ï –ü–ï–†–ï–î–ê–í–ê–¢–¨"
    - –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏" –±–µ–∑ –∑–∞–ø–∏—Å–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —á–∞—Å—ã ‚Üí "–ù–ï –ü–ï–†–ï–î–ê–í–ê–¢–¨"
    - –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ "–ù–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å—É–º–º–µ –¥–æ–ª–≥–∞" –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—É–º–º—ã >300—Ç—Ä ‚Üí "–ù–ï –ü–ï–†–ï–î–ê–í–ê–¢–¨"
    - –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–∞–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã ‚Üí "–ü–ï–†–ï–î–ê–í–ê–¢–¨"
    - –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ "–ù–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å—É–º–º–µ –¥–æ–ª–≥–∞" —Å —Å—É–º–º–æ–π >300—Ç—Ä ‚Üí "–ü–ï–†–ï–î–ê–í–ê–¢–¨"
    - –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ "–ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏" —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —á–∞—Å—ã ‚Üí "–ü–ï–†–ï–î–ê–í–ê–¢–¨"

    ### –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON):
    {
      "decision": "–ü–ï–†–ï–î–ê–í–ê–¢–¨ –∏–ª–∏ –ù–ï –ü–ï–†–ï–î–ê–í–ê–¢–¨",
      "reason": "–ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è",
      "detected_categories": [
        {
          "name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
          "status": "approved –∏–ª–∏ rejected",
          "explanation": "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å —Ü–∏—Ç–∞—Ç–æ–π –∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"
        },
        ...
      ]
    }
    """
    
    user_prompt = f"–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:\n{transcript}"
    
    try:
        response = client.chat.completions.create(
            model=cfg.GPT_MODEL,
            response_format={"type": "json_object"},
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_prompt}
            ],
            temperature=cfg.TEMP_SUMMARY,
            max_tokens=2000
        )
        
        result_json = response.choices[0].message.content
        analysis = json.loads(result_json)
        st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω.")
        return analysis
    except Exception as e:
        st.error(f"üö® –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}")
        st.stop()
        